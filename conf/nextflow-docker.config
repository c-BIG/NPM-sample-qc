// global configuration
params {
    // execution
    // container = "npm-sample-qc.simg"
    // container = "justinjj24/npm-sample-qc:latest"

    // output
    keep_workdir = "false"
    publishdir = "${params.outdir}/results"
    infodir = "${params.outdir}/pipeline_info"

    // resources
    resourcesdir = "s3://npm-grids/resources/NPM-sample-qc-aux/resources"
    ref_fa = "${params.resourcesdir}/Homo_sapiens_assembly38.fasta"
    dbsnp_vcf = "${params.resourcesdir}/common_all_20180418.chr.vcf.gz"
    vbi2_ud = "${params.resourcesdir}/1000g.phase3.100k.b38.vcf.gz.dat.UD"
    vbi2_bed = "${params.resourcesdir}/1000g.phase3.100k.b38.vcf.gz.dat.bed"
    vbi2_mean = "${params.resourcesdir}/1000g.phase3.100k.b38.vcf.gz.dat.mu"
    autosomes_bed = "${params.resourcesdir}/Homo_sapiens_assembly38.autosomes.bed"
    n_regions_bed = "${params.resourcesdir}/Homo_sapiens_assembly38.autosomes.n_regions.bed"
    version_info = "${params.resourcesdir}/version_info"

    // help
    params.help = null
}

nextflow.enable.dsl=1

plugins {
  id "nf-amazon"
}

aws.client.downloadParallel = true

// environment-specific configuration
profiles {
    local {
        includeConfig 'base.config'
        process.executor = "local"
        process.container = '/home/ubuntu/NPM-sample-qc/containers/npm-sample-qc.simg'
        process.errorStrategy = "retry"
        process.maxRetries = 1
        singularity.enabled = true
        singularity.autoMounts = true
    }
    docker {
        includeConfig 'base.config'
        process.executor = "local"
        process.container = "npm-sample-qc:latest"
        process.errorStrategy = "retry"
        process.maxRetries = 1
        // executor.pollInterval = "2 sec"
        docker.enabled = true
    }
    awsbatch {
        includeConfig 'base.config'
        process.executor = "awsbatch"
        process.region = "ap-southeast-1"
        process.queue = "npm-sample-qc-spot70"
        process.container = "046503905558.dkr.ecr.ap-southeast-1.amazonaws.com/npm-sample-qc:latest"
        aws.batch.cliPath = '/home/ec2-user/miniconda/bin/aws'
        // aws.batch.volumes = '/data'
        process.errorStrategy = "retry"
        process.maxRetries = 4
        docker.enabled = true
    }
    nscc {
        includeConfig 'base.config'
        includeConfig 'nscc.config'
    }
}

// sample-specific configuration
// to be provided through args
// see tests/sample_params.yml for an example
params {
    sample_id = null
    cram = null
    vcf = null
    pst_vcf = null
}

// generate trace
trace {
    enabled = true
    overwrite = true
    file = "${params.infodir}/trace.txt"
    fields = 'task_id,hash,name,status,exit,cpus,memory,time,attempt,duration,realtime,%cpu,%mem,rss'
}

// generate timeline
timeline {
    enabled = true
    overwrite = true
    file = "${params.infodir}/timeline.html"
}

// generate dag
dag {
    enabled = true
    overwrite = true
    file = "${params.infodir}/dag.pdf"
}
