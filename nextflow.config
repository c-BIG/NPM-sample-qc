// global configuration
manifest {
  name = 'npm-sample-qc'
  author = 'Justin Jeyakani, Mar Gonzalez-Porta, Maxime HEBRARD, Rodrigo Toro, Nicolas Bertin'
  homePage = 'https://github.com/c-BIG/NPM-sample-qc'
  description = 'Nextflow NPM-sample-qc analysis pipeline, part of the GHIF community.'
  mainScript = 'main.nf'
  nextflowVersion = '!>=23.04.1'
  version = '0.10.4'
}

cleanup = true

params {

    // output
    outdir = "."
    publishdir = "${params.publish_dir}/results"
    info_dir = "${params.publish_dir}/pipeline_info"
    publish_mode = 'copy'

    // help
    params.help = null

    // Default to signed request when accessing s3 bucket
    // can be overwritten using params.aws_no_sign_request
    aws_no_sign_request = false

}

process {

    errorStrategy = 'retry'
    maxRetries = 2

    withName: 'samtools_stats' {

        cpus = 2
        disk = '50 GB'
        memory = '3 GB'

        publishDir = [
            path: "${params.publishdir}/samtools",
            mode: params.publish_mode,
        ]
    }

    withName: 'mosdepth' {

        cpus = 4
        disk = '50 GB'
        memory = '2 GB'

        publishDir = [
            path: "${params.publishdir}/mosdepth",
            mode: params.publish_mode,
        ]
    }
    withName: 'mosdepth_datamash' {

        cpus = 1
        memory = '1 GB'

        publishDir = [
            path: "${params.publishdir}/mosdepth",
            mode: params.publish_mode,
        ]
    }
    withName: 'verifybamid2' {

        cpus = 4
        disk = '50 GB'
        memory = { 2.GB * task.attempt }

        publishDir = [
            path: "${params.publishdir}/verifybamid2",
            mode: params.publish_mode,
        ]
    }
    withName: 'picard_collect_multiple_metrics' {

        cpus = 1
        disk = '50 GB'
        memory = { 3.GB * task.attempt }

        publishDir = [
            path: "${params.publishdir}/picard_collect_multiple_metrics",
            mode: params.publish_mode,
        ]
    }
    withName: 'multiqc' {

        cpus = 1
        memory = '1 GB'

        publishDir = [
            path: "${params.publishdir}/multiqc",
            mode: params.publish_mode,
        ]
    }
    withName: 'compile_metrics' {

        cpus = 1
        memory = { 1.GB * task.attempt }

        publishDir = [
            path: "${params.publishdir}/metrics",
            mode: params.publish_mode,
        ]
    }
}

plugins {
   id "nf-amazon"
}
 
if (params.aws_no_sign_request) {
    aws.client.anonymous = true
}
aws.client.downloadParallel = true
aws.client.maxConnections = 4
aws.batch.maxParallelTransfers = 8

// Container slug. Stable releases should specify release tag!
// Developmental code should specify :dev

process.container =  "cbig/npm-sample-qc:v${manifest.version}"
docker.enabled = true
docker.runOptions = '-u \$(id -u):\$(id -g)'

// To use container provisioning service integrated with Nextflow
// See https://www.nextflow.io/docs/latest/wave.html

wave {
  enabled = true
}

// Load resources.config by default

includeConfig 'conf/resources.config'

// environment-specific configuration

profiles {
    singularity {
        includeConfig 'conf/singularity.config'
    }
    docker {
        includeConfig 'conf/docker.config'
        // executor.pollInterval = "2 sec"
    }
    awsbatch {
        includeConfig 'conf/awsbatch.config'
    }
}

// sample-specific configuration to be provided through args
// see tests/NA12878_1000genomes-dragen-3.7.6/params.yml for an example

// generate trace

trace {
    enabled = true
    overwrite = true
    file = "${params.info_dir}/trace.txt"
}

// generate timeline

timeline {
    enabled = true
    overwrite = true
    file = "${params.info_dir}/timeline.html"
}

report {
    enabled = true
    overwrite = true
    file = "${params.info_dir}/report.html"
}

// generate dag

dag {
    enabled = true
    overwrite = true
    file = "${params.info_dir}/dag.pdf"
}
